{"ast":null,"code":"var _jsxFileName = \"/Users/megannielsen/Documents/Dojo/JS/hook_form_proj/src/Components/new_form.js\";\nimport React, { useState } from 'react';\n\nconst RegisterForm = props => {\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const onChangeHandler = event => {\n    setFormState({ ...formState,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState);\n  };\n\n  let message;\n\n  if (formState.firstName.length < 2) {\n    message = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Error: name must be at least 2 characters.\");\n  }\n\n  if (formState.lastName.length < 2) {\n    message = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Error: name must be at least 2 characters.\");\n  }\n\n  if (formState.email.length < 5) {\n    message = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Error: email must be at least 5 characters.\");\n  }\n\n  if (formState.password.length < 8) {\n    message = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Error: password must be at least 8 characters.\");\n  }\n\n  if (formState.confirmPassword.length < 8 && formState.confirmPassword !== formState.password) {\n    message = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Error: passwords must match.\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"firstName\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"lastName\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Confirm Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    name: \"confirmPassword\",\n    onChange: onChangeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", React.createElement(\"input\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"First Name: \", formState.firstName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Last Name: \", formState.lastName), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Email: \", formState.email), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Password: \", formState.password), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Confirm Password: \", formState.confirmPassword));\n};\n\nexport default RegisterForm;","map":{"version":3,"sources":["/Users/megannielsen/Documents/Dojo/JS/hook_form_proj/src/Components/new_form.js"],"names":["React","useState","RegisterForm","props","formState","setFormState","firstName","lastName","email","password","confirmPassword","onChangeHandler","event","target","name","value","onSubmitHandler","preventDefault","console","log","message","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nconst RegisterForm = props => {\n    const [ formState, setFormState ] = useState({\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    })\n    const onChangeHandler = event => {\n        setFormState({\n            ...formState,\n            [event.target.name]: event.target.value\n        });\n    }\n    const onSubmitHandler = event => {\n        event.preventDefault();\n        console.log(formState);\n    }\n    let message;\n    if (formState.firstName.length < 2){\n        message=<p>Error: name must be at least 2 characters.</p>\n    }\n    if (formState.lastName.length < 2){\n        message=<p>Error: name must be at least 2 characters.</p>\n    }\n    if (formState.email.length < 5){\n        message=<p>Error: email must be at least 5 characters.</p>\n    }\n    if (formState.password.length < 8){\n        message=<p>Error: password must be at least 8 characters.</p>\n    }\n    if (formState.confirmPassword.length < 8 && formState.confirmPassword !== formState.password){\n        message=<p>Error: passwords must match.</p>\n    }\n    return(\n        <div>\n            <form onSubmit={onSubmitHandler}>\n                <label>First Name</label>\n                <input type=\"text\" name=\"firstName\" onChange={onChangeHandler}/>\n                <br/>        \n                <label>Last Name</label>\n                <input type=\"text\" name=\"lastName\" onChange={onChangeHandler}/>\n                <br/>        \n                <label>Email</label>\n                <input type=\"email\" name=\"email\" onChange={onChangeHandler}/>\n                <br/>        \n                <label>Password</label>\n                <input type=\"password\" name=\"password\" onChange={onChangeHandler}/>\n                <br/>        \n                <label>Confirm Password</label>\n                <input type=\"password\" name=\"confirmPassword\" onChange={onChangeHandler}/>\n                <br/>   \n                <input type=\"submit\" />     \n            </form>\n            <p>First Name: {formState.firstName}</p>\n            <p>Last Name: {formState.lastName}</p>\n            <p>Email: {formState.email}</p>\n            <p>Password: {formState.password}</p>\n            <p>Confirm Password: {formState.confirmPassword}</p>\n        </div>\n    );\n}\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}